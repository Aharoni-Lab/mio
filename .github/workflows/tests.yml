name: Run Python tests

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

# Don't run duplicates - eg. if pushing to an open PR
#concurrency:
#  group: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
#  cancel-in-progress: true

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: pip install -e .[tests] pytest-md
      
      - name: show runner.os
        run: echo ${{ runner.os }}

      - name: Install FFmpeg on Windows
        if: runner.os == 'Windows'
        run: choco install ffmpeg

      - name: Install FFmpeg on macOS
        if: runner.os == 'macOS'
        run: brew install ffmpeg

      - name: Install FFmpeg on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get install -y ffmpeg

      - name: Run tests
        uses: pavelzw/pytest-action@v2
        with:
          verbose: true
          emoji: false
          job-summary: true

      - name: Report to coveralls
        uses: coverallsapp/github-action@v2
        with:
          flag-name: run-${{ join(matrix.*, '-') }}
          parallel: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: test
    steps:
      - name: Complete Coveralls report
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

